class Solution {
    public int[] mergeHeaps(int[] a, int[] b, int n, int m) {
        int[] ans = new int[n + m];
        int index = 0;

        // Copy elements from array 'a' to the 'ans' array
        for (int i = 0; i < n; i++) {
            ans[index++] = a[i];
        }

        // Copy elements from array 'b' to the 'ans' array
        for (int i = 0; i < m; i++) {
            ans[index++] = b[i];
        }

        // Perform heapify on 'ans' array to convert it into a max heap
        for (int i = (n + m) / 2 - 1; i >= 0; i--) {
            heapify(ans, n + m, i);
        }

        return ans;
    }

    private void heapify(int[] arr, int n, int i) {
        int largest = i;
        int left = 2 * i + 1;
        int right = 2 * i + 2;

        if (left < n && arr[largest] < arr[left]) {
            largest = left;
        }
        if (right < n && arr[largest] < arr[right]) {
            largest = right;
        }
        if (largest != i) {
            int temp = arr[largest];
            arr[largest] = arr[i];
            arr[i] = temp;
            heapify(arr, n, largest);
        }
    }
}
