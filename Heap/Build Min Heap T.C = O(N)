import java.io.*; 
public class Solution
{
	
    private static void heapify(int[] arr, int n, int i) {
        int smallest = i;
        int left = 2 * i + 1;
        int right = 2 * i + 2;

        if (left < n && arr[smallest] > arr[left]) {
            smallest = left;
        }

        if (right < n && arr[smallest] > arr[right]) {
            smallest = right;
        }

        if (smallest != i) {
            swap(arr, smallest, i);
            heapify(arr, n, smallest);
        }
    }

    private static void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

    public static int[] buildMinHeap(int[] arr) {
        int n = arr.length;
        for (int i = n / 2; i >= 0; i--) {
            heapify(arr, n, i);
        }
        return arr;
    }
}
