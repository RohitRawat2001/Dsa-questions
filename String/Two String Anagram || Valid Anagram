class Solution {
    public boolean isAnagram(String s, String t) {
              // Remove spaces and convert to lowercase for uniform comparison

        // s = s.replaceAll("\\s+", "").toLowerCase();
        // t = t.replaceAll("\\s+", "").toLowerCase(); 

                           OR                                      // THESE TWO's WAYS TO CLEAN STRING

        s = s.replaceAll("[^a-zA-Z0-9]", "").toLowerCase();
        t = t.replaceAll("[^a-zA-Z0-9]", "").toLowerCase();



        // If lengths are not the same, they cannot be anagrams
        if (s.length() != t.length()) {
            return false;
        }

        // Create an array to count occurrences of characters
        int[] charCount = new int[26]; // Assuming only lowercase letters a-z

        // Count characters from the first string
        for (char c : s.toCharArray()) {
            charCount[c - 'a']++;
        }

        // Decrease the count based on the second string
        for (char c : t.toCharArray()) {
            charCount[c - 'a']--;
            // If count goes negative, not an anagram
            if (charCount[c - 'a'] < 0) {
                return false;
            }
        }

        return true; // All counts should be zero if they are anagrams  
        
    }
}
