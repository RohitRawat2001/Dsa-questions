//brute

public class Solution {
    public static boolean checkPalindrome(String str) {
//Removing any characters that are not letters or digits.
  //Converting the entire string to lowercase
        str = str.replaceAll("[^a-zA-Z0-9]", "").toLowerCase();

        int s=0;
        int e= str.length()-1; 

        while(s<e){
            if(str.charAt(s)!= str.charAt(e) ){
                 return false;
            }
              s++;
              e--;
        }
         return true;
    }
}

// better

class Solution {
    public boolean isPalindrome(String s) {
       // Remove all non-alphanumeric characters and convert to lowercase
        String cleanedString = s.replaceAll("[^a-zA-Z0-9]", "").toLowerCase();
        
        // Reverse the cleaned string
        StringBuilder sb = new StringBuilder(cleanedString);
        String reversed = sb.reverse().toString();

        // Check if the cleaned string is equal to its reversed version
        return cleanedString.equals(reversed);

    }
}

//optimal

class Solution {
    public boolean isPalindrome(String s) {
        
        int start = 0;
        int last = s.length() - 1;
        while(start <= last) {
        	char currFirst = s.charAt(start);
        	char currLast = s.charAt(last);
        	if (!Character.isLetterOrDigit(currFirst )) {
        		start++;
        	} else if(!Character.isLetterOrDigit(currLast)) {
        		last--;
        	} else {
        		if (Character.toLowerCase(currFirst) != Character.toLowerCase(currLast)) {
        			return false;
        		}
        		start++;
        		last--;
        	}
        }
        return true;

    }
}
