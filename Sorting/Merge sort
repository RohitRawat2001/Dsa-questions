
class Solution
{
   void merge(int arr[], int l, int m, int r)
    {
        int temp[] = new int[r - l + 1];
        int left = l;
        int right = m + 1;
        int index = 0;

        while (left <= m && right <= r) {
            if (arr[left] <= arr[right]) {
                temp[index++] = arr[left++];
            } else {
                temp[index++] = arr[right++];
            }
        }

        while (left <= m) {
            temp[index++] = arr[left++];
        }
        while (right <= r) {
            temp[index++] = arr[right++];
        }

        for (int i = l; i <= r; i++) {
            arr[i] = temp[i-l];
        }
    }

    void mergeSort(int arr[], int l, int r)
    {
        if (l >= r) return ;
            int mid = l + (r - l) / 2;

            mergeSort(arr, l, mid);
            mergeSort(arr, mid + 1, r);

            merge(arr, l, mid, r);
        
    }
}
