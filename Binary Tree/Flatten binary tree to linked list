// THis is a morris traversal 
class Solution
{
     static Node prev = null;
    public static void flatten(Node root)
    {
         Node cur = root;
		while (cur!=null)
		{
			if(cur.left!=null)
			{
				Node pre = cur.left;
				while(pre.right!=null)
				{
					pre = pre.right;
				}
				pre.right = cur.right;
				cur.right = cur.left;
				cur.left = null;
			}
			cur = cur.right;
		}
    }
}
//////////////////// another version//////////////////



public class Solution 
{
		static TreeNode<Integer> prev = null;
    public static TreeNode<Integer> flattenBinaryTree(TreeNode<Integer> root)
    {
        // Write your code here.
   
        TreeNode<Integer> cur = root;
		while (cur!=null)
		{
			if(cur.left!=null)
			{
				TreeNode<Integer> pre = cur.left;
				while(pre.right!=null)
				{
					pre = pre.right;
				}
				pre.right = cur.right;
				cur.right = cur.left;
				cur.left = null;
			}
			cur = cur.right;
		}
		return root;
    }
    
}
