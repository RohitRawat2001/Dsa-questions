class Solution
{
     private static class Pair {
        Node node;
        int hd;

        Pair(Node node, int hd) {
            this.node = node;
            this.hd = hd;
        }
    }

    public ArrayList<Integer> bottomView(Node root) {
        ArrayList<Integer> bottomViewList = new ArrayList<>();
        if (root == null) {
            return bottomViewList;
        }

        Map<Integer, Integer> bottomViewMap = new TreeMap<>();
        Queue<Pair> queue = new LinkedList<>();
        queue.add(new Pair(root, 0));

        while (!queue.isEmpty()) {
            Pair current = queue.remove();
            Node node = current.node;
            int hd = current.hd;

            // Update the bottom view map for the current HD
            bottomViewMap.put(hd, node.data);

            if (node.left != null) {
                queue.add(new Pair(node.left, hd - 1));
            }
            if (node.right != null) {
                queue.add(new Pair(node.right, hd + 1));
            }
        }

        // Add the values in the map to the result list
        for (int value : bottomViewMap.values()) {
            bottomViewList.add(value);
        }

        return bottomViewList;
    }
}
