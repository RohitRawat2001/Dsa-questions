
class GFG{
	ArrayList<Integer> zigZagTraversal(Node root)
	{
	      ArrayList<Integer> ans = new ArrayList<>();
	   if(root == null){
	       return ans;
	   }
	   
	   Queue<Node> q = new LinkedList<>();
	   q.add(root);
	   
	   boolean flag = false;
	   while(!q.isEmpty()){
	       int n = q.size();
	       ArrayList<Integer> temp = new ArrayList<>();
	       for(int i = 0 ; i < n ;i++){
	           Node curr = q.remove();
	           temp.add(curr.data);
	           if(curr.left != null){
	               q.add(curr.left);
	           }
	           if(curr.right != null){
	               q.add(curr.right);
	           }
	       }
	       if(flag){
	           Collections.reverse(temp);
	       }
	       for(int i : temp){
	           ans.add(i);
	       }
	       flag = !flag;
	   }
	   return ans;
	}
}
