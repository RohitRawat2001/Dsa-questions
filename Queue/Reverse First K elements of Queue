T.C = O(N)


class GfG {
    // Function to reverse first k elements of a queue.
    public Queue<Integer> modifyQueue(Queue<Integer> q, int k) {
        // Create a stack to temporarily store the first k elements.
        Stack<Integer> s = new Stack<>();
     
        // Dequeue the first k elements from the queue and push them onto the stack.
        for (int i = 0; i < k; i++) {
            int val = q.poll();
            s.push(val);
        }
        
        // Pop the elements from the stack and enqueue them back into the queue to reverse the first k elements.
        while (!s.isEmpty()) {
            int val = s.pop();
            q.offer(val);
        }
        
        // Calculate the number of elements that were not reversed (total size - k).
        int t = q.size() - k;
        
        // Rotate the remaining elements by t positions to bring them to the front.
        while (t > 0) {
            int val = q.poll();
            q.offer(val);
            t--;
        }
        
        // Return the modified queue with the first k elements reversed.
        return q;
    }
}
