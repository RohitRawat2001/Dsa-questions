// limited elements
public class Solution {
    public static int missingNumber(int []a, int N) {
         
        int total_sum=N*(N+1)/2;
        
        int sum=0;
        for(int i=0;i<N-1;i++){
            sum += a[i];
        }
       return total_sum-sum;

    }
}

// same as first 
class Solution {
   public int missingNumber(int[] nums) {
        int n = nums.length;
        int expectedSum = (n * (n + 1)) / 2;
        int actualSum = 0;
        for (int num : nums) {
            actualSum += num;
        }
        return expectedSum - actualSum;
    }
}

// optimal code for multiple cases

public class Solution {
    public static int missingNumber(int[] a, int N) {
        int xor1 = a[0];
        
        for (int i = 1; i < N; i++) {
            xor1 ^= a[i];
        }
        
        int xor2 = 0;                      //  int xor2 = 1;
        for (int i = 1; i <= N; i++) {    //  for(int i = 2;i<= N+1;i++)
            xor2 ^= i;
        }
        
        return xor1 ^ xor2;
    }
}
