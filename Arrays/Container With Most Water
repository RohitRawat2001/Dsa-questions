//Brute force n^2

class Solution{
    static int maxArea(int nums[]) {
	   int mx = Integer.MIN_VALUE;
    	for(int i = 0; i < nums.length; i++){
    		for(int j = i + 1; j < nums.length; j++){
    			int water = (j-i)* Math.min(nums[i], nums[j]);
    			mx = Math.max(mx, water);
    		}
    	}
        return mx;
	}
}


//optimal solution using 2 pointers          T.C = O(N)  S.C = O(1)

class Solution {
    public int maxArea(int[] height) {
        int max = 0;
         int i = 0;
         int j = height.length-1;

         while(i < j){
             int area = (j-i)*Math.min(height[i],height[j]);
             max = Math.max(max,area);

             if(height[i] < height[j]){
                 i++;
             }else{
                 j--;
             }
         }
         return max;
        
    }
}
