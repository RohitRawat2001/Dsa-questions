// with extra space of 3rd array T.C = o(n+m) + o(n+m)    S.C = o(n+m)

class Solution {
    public void merge(long[] nums1, int m, long[] nums2, int n) {
        long[] arr = new int[n+m];
        int left = 0;
        int right = 0;
        int index = 0;

        while(left < n && right < m){
            if(nums1[left] <= nums2[right]){
                arr[index++] = nums1[left++];
            }else{
                arr[index++] = nums2[right++];
            }
        }
        while(left < n){
              arr[index++] = nums1[left++];
        }
        while(right < m){
             arr[index++] = nums2[right++];
        }
       // fill back to the arr1 and arr2
        for(int i = 0 ; i < n+m ; i++){
            if(i < n){
                nums1[i] = arr[i];
            }else{
                nums2[i-n] = arr[i];
            }
        }
    }
}

// withour extra space 

import java.util.*;
public class Solution {
    public static void mergeTwoSortedArraysWithoutExtraSpace(long []a, long []b){
        int n = a.length;
        int m = b.length;

        int left = n-1;
        int right = 0;
        while(left >= 0 && right < m){
            if(a[left] > b[right]){
                long temp = a[left];
                a[left] = b[right];
                b[right] = temp;
                left--;
                right++;
            }else{
                break;
            }
        }
        Arrays.sort(a);
        Arrays.sort(b);
    }
}
