class Solution {
    public int maxProfit(int[] prices) {
        int mini = prices[0];
        int maxProfit = 0;
        for(int i=1;i<prices.length;i++){
           int diff = prices[i] - mini;
           maxProfit = Math.max(diff,maxProfit);
            mini = Math.min(mini,prices[i]);
        }
        return maxProfit;
        
    }
}



T.C = O(N) S.C = O(1)

// Using arraylist

import java.util.* ;

public class Solution{
    public static int maximumProfit(ArrayList<Integer> prices){
       int mini = prices.get(0);
       int maximumProfit = 0;

       for(int i = 0 ; i< prices.size();i++){
           int diff = prices.get(i) - mini;
           maximumProfit = Math.max(diff,maximumProfit);
           mini = Math.min(mini,prices.get(i));
       }
       return maximumProfit;
    }
}
