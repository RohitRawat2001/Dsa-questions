// better solution

import java.util.* ;
import java.io.*; 
public class Solution 
{
    public static void sort012(int[] arr)
    {
         int cnt0 = 0, cnt1 = 0, cnt2 = 0;
         int n=arr.length;

        for (int i = 0; i < n; i++) {
            if (arr[i] == 0) cnt0++;
            else if (arr[i] == 1) cnt1++;
            else cnt2++;
        }

        // Replace the values in the original array:
        for (int i = 0; i < cnt0; i++) arr[i] = 0; // replacing 0's

        for (int i = cnt0; i < cnt0 + cnt1; i++) arr[i] = 1; // replacing 1's

        for (int i = cnt0 + cnt1; i < n; i++) arr[i] = 2; // replacing 2's
    }
}

// optimal solution

import java.util.* ;
import java.io.*; 
public class Solution 
{
    public static void sort012(int[] arr)
    {
        int n = arr.length;
        int low = 0;
        int mid = 0;
        int high = n-1;

        while(mid <= high){
            if(arr[mid] == 0){
                int temp = arr[mid];
                arr[mid] = arr[low];
                arr[low] = temp;

                mid++;
                low++;
            }
            else if(arr[mid] == 1){
                mid++;
            }else{
                int temp = arr[high];
                arr[high] = arr[mid];
                arr[mid] = temp;

                high--;
            }
        }
    }
}
